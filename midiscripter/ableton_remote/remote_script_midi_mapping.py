import collections

from midiscripter.midi.midi_msg import MidiType
from .ableton_msg import AbletonEvent


_BUTTONMESSAGETYPE = MidiType.NOTE_ON
_BUTTONCHANNEL = 15

_CLIPMESSAGETYPE = MidiType.NOTE_ON
_CLIPCHANNEL = 16

_SLIDERMESSAGETYPE = MidiType.CONTROL_CHANGE
_SLIDERCHANNEL = 15


_ableton_button_to_midi_attrs_map: dict[AbletonEvent, tuple[MidiType, int, int] | list] = {
    AbletonEvent.PLAY: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 1),
    AbletonEvent.STOP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 2),
    AbletonEvent.REC: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 3),
    AbletonEvent.TAP_TEMPO: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 4),
    AbletonEvent.NUDGE_UP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 5),
    AbletonEvent.NUDGE_DOWN: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 6),
    AbletonEvent.UNDO: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 7),
    AbletonEvent.REDO: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 8),
    AbletonEvent.LOOP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 9),
    AbletonEvent.PUNCH_IN: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 10),
    AbletonEvent.PUNCH_OUT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 11),
    AbletonEvent.OVERDUB: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 12),
    AbletonEvent.METRONOME: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 13),
    AbletonEvent.REC_QUANT_TOGGLE: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 14),
    AbletonEvent.VIEW_DETAIL: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 15),
    AbletonEvent.VIEW_CLIPTRACK: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 16),
    AbletonEvent.DEVICE_LOCK: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 17),
    AbletonEvent.DEVICE_TOGGLE: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 18),
    AbletonEvent.DEVICE_NAV_LEFT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 19),
    AbletonEvent.DEVICE_NAV_RIGHT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 20),
    AbletonEvent.DEVICE_BANK_NAV_LEFT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 21),
    AbletonEvent.DEVICE_BANK_NAV_RIGHT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 22),
    AbletonEvent.DEVICE_BANK: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 23),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 24),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 25),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 26),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 27),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 28),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 29),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 30),
    ],
    AbletonEvent.SEEK_FWD: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 31),
    AbletonEvent.SEEK_RWD: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 32),
    AbletonEvent.SESSION_LEFT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 33),
    AbletonEvent.SESSION_RIGHT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 34),
    AbletonEvent.SESSION_UP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 35),
    AbletonEvent.SESSION_DOWN: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 36),
    AbletonEvent.ZOOM_UP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 37),
    AbletonEvent.ZOOM_DOWN: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 38),
    AbletonEvent.ZOOM_LEFT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 39),
    AbletonEvent.ZOOM_RIGHT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 40),
    AbletonEvent.TRACK_LEFT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 41),
    AbletonEvent.TRACK_RIGHT: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 42),
    AbletonEvent.SCENE_UP: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 43),
    AbletonEvent.SCENE_DOWN: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 44),
    AbletonEvent.SEL_SCENE_LAUNCH: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 45),
    AbletonEvent.SCENE_LAUNCH: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 46),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 47),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 48),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 49),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 50),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 51),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 52),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 53),
    ],
    AbletonEvent.SEL_CLIP_LAUNCH: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 53),
    AbletonEvent.STOP_ALL_CLIPS: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 54),
    AbletonEvent.MASTER_SEL: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 55),
    AbletonEvent.SEL_TRACK_REC: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 56),
    AbletonEvent.SEL_TRACK_SOLO: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 57),
    AbletonEvent.SEL_TRACK_MUTE: (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 58),
    AbletonEvent.TRACK_STOP: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 59),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 60),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 61),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 62),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 63),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 64),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 65),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 66),
    ],
    AbletonEvent.TRACK_SELECT: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 67),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 68),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 69),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 70),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 71),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 72),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 73),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 74),
    ],
    AbletonEvent.TRACK_MUTE: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 75),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 76),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 77),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 78),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 79),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 80),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 81),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 82),
    ],
    AbletonEvent.TRACK_SOLO: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 83),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 84),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 85),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 86),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 87),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 88),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 89),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 90),
    ],
    AbletonEvent.TRACK_ARM: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 91),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 92),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 93),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 94),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 95),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 96),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 97),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 98),
    ],
    AbletonEvent.DRUM_PAD: [
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 101),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 102),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 103),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 104),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 105),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 106),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 107),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 108),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 109),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 110),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 111),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 112),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 113),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 114),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 115),
        (_BUTTONMESSAGETYPE, _BUTTONCHANNEL, 116),
    ],
    AbletonEvent.CLIP_LAUNCH: [
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 11),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 12),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 13),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 14),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 15),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 16),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 17),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 18),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 21),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 22),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 23),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 24),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 25),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 26),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 27),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 28),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 31),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 32),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 33),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 34),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 35),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 36),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 37),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 38),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 41),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 42),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 43),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 44),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 45),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 46),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 47),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 48),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 51),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 52),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 53),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 54),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 55),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 56),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 57),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 58),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 61),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 62),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 63),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 64),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 65),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 66),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 67),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 68),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 71),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 72),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 73),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 74),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 75),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 76),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 77),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 78),
        ],
        [
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 81),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 82),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 83),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 84),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 85),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 86),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 87),
            (_CLIPMESSAGETYPE, _CLIPCHANNEL, 88),
        ],
    ],
}

_ableton_slider_to_midi_attrs_map: dict[AbletonEvent, tuple[MidiType, int, int] | list] = {
    AbletonEvent.TEMPO_CONTROL: (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 1),
    AbletonEvent.MASTER_VOLUME: (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 2),
    AbletonEvent.CUE_LEVEL: (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 3),
    AbletonEvent.CROSSFADER: (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 4),
    AbletonEvent.TRACK_VOL: [
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 5),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 6),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 7),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 8),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 9),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 10),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 11),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 12),
    ],
    AbletonEvent.TRACK_PAN: [
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 13),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 14),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 15),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 16),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 17),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 18),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 19),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 20),
    ],
    AbletonEvent.TRACK_SEND: [
        [
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 21),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 22),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 23),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 24),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 25),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 26),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 27),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 28),
        ],
        [
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 29),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 30),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 31),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 32),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 33),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 34),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 35),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 36),
        ],
        [
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 37),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 38),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 39),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 40),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 41),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 42),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 43),
            (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 44),
        ],
    ],
    AbletonEvent.PARAM_CONTROL: [
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 45),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 46),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 47),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 48),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 49),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 50),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 51),
        (_SLIDERMESSAGETYPE, _SLIDERCHANNEL, 52),
    ],
}


def _reversed_event_dict(source_map: dict[AbletonEvent, tuple[MidiType, int, int] | list]) -> dict:
    reversed_map = {}
    for event, item in source_map.items():
        if isinstance(item, tuple):
            reversed_map[item] = (event, None)
        elif isinstance(item[0], list):  # list in list
            for index, subitem in enumerate(item):
                for nested_index, attrs in enumerate(subitem):
                    reversed_map[attrs] = (event, (index, nested_index))
        elif isinstance(item, list):
            for index, attrs in enumerate(item):
                reversed_map[attrs] = (event, index)

    return reversed_map


ableton_event_to_midi_map: collections.ChainMap[AbletonEvent, tuple[MidiType, int, int] | list] = (
    collections.ChainMap(_ableton_button_to_midi_attrs_map, _ableton_slider_to_midi_attrs_map)
)

midi_to_ableton_button_map: dict[
    tuple[MidiType, int, int], tuple[AbletonEvent, int | tuple[int, int]]
] = _reversed_event_dict(_ableton_button_to_midi_attrs_map)
midi_to_ableton_slider_map: dict[
    tuple[MidiType, int, int], tuple[AbletonEvent, int | tuple[int, int]]
] = _reversed_event_dict(_ableton_slider_to_midi_attrs_map)
