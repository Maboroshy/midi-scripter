from typing import TYPE_CHECKING

from base.msg_base import Msg

if TYPE_CHECKING:
    from collections.abc import Container
    from midiscripter.metronome.metronome_port import MetronomeIn


class ClickMsg(Msg):
    """Message generated by metronome port by default"""

    __match_args__: tuple[str] = ('type', 'bpm', 'number')
    type: str = 'Click'

    bpm: float
    """Metronome bpm while sending the message"""

    number: int
    """Message numer counting from the first after metronome port opening"""

    source: 'None | MetronomeIn'

    def __init__(self):
        super().__init__('Click')

    def matches(
        self,
        bpm: 'None | Container | float' = None,
        number: 'None | Container | int' = None,
    ) -> bool:
        return super().matches(self.type, bpm, number)
